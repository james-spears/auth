worker_processes  5;  ## Default: 1
error_log  logs/error.log;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    /etc/nginx/conf/mime.types;
  include    /etc/nginx/proxy.conf;
  include    /etc/nginx/fastcgi.conf;
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server_tokens off;
  add_header Content-Security-Policy "default-src 'none'; img-src 'self' https://*.google-analytics.com/ https://*.googleusercontent.com/ data:; frame-src https://accounts.google.com/; font-src 'self' https://fonts.gstatic.com/ https://cdn.jsdelivr.net/; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.google-analytics.com/ https://*.googletagmanager.com/ https://*.google.ca/ https://*.google.com/ https://apis.google.com/ https://cdn.jsdelivr.net/; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com/ https://cdn.jsdelivr.net/; object-src 'none'; connect-src 'self' https://*.google-analytics.com/ http://localhost:3000";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Frame-Options sameorigin always;
  add_header Referrer-Policy no-referrer always;
  add_header X-Content-Type-Options nosniff always;

  # upstream auth_backend {
  #     server 127.0.0.1:8000; # Your authentication service
  # }

  server {

    listen 8080;

    sendfile on;

    client_max_body_size 100M;

    default_type application/octet-stream;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable      "MSIE [1-6]\.";
    gzip_min_length   1100;
    gzip_vary         on;
    gzip_proxied      expired no-cache no-store private auth;
    gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level   9;


    root /usr/share/nginx/html;

    location /static {                         
      alias /var/www/com/static/;
      expires modified +1w;                        
    }

    location /accounts/ {
        proxy_pass http://auth:8000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Origin 'http://localhost:8080';
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
    }

    location /api/ {
        auth_request /auth;
        auth_request_set $authorization_key $upstream_http_x_authorization_key; # Capture X-User-ID header
        # auth_request_set $user_role $upstream_http_x_user_role; # Capture X-User-Role header

        proxy_set_header X-Authorization-Key $authorization_key;
        # proxy_set_header X-Authenticated-User-Role $user_role;

        proxy_pass http://api:3000;
    }

    location / {
        proxy_pass http://app:80;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Origin 'http://localhost:8080';
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
    }

    location = /auth {
        internal; # This location is only accessible via internal Nginx requests
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri; # Pass original URI to auth service
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header Origin 'http://localhost:8080';
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://auth:8000/auth/; # Your auth service endpoint
    }

  }

}