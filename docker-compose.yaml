services:
  www:
    # image: ghcr.io/auth/web/www:main
    build: www
    #container_name: www
    hostname: www
    volumes:
      - static-files:/var/www/com/static/
    ports:
      - 8080:8080
    depends_on:
      - auth
    networks:
      - www-net

  auth:
    # image: ghcr.io/auth/web/auth:main
    build: .
    #container_name: auth
    hostname: auth
    ports:
      - 8000:8000
    volumes:
      - static-files:/var/www/com/static/
    environment:
      DEBUG: 0
      LOG: 0
      SECRET_KEY: ${SECRET_KEY}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USERNAME: ${DATABASE_USER:-postgres}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      DATABASE_NAME: ${DATABASE_PASSWORD:-postgres}
    depends_on:
      - db
    networks:
      - www-net

  cache:
    image: redis:latest # Or specify a version like redis:7.0-alpine
    hostname: cache
    ports:
      - 6379:6379
    networks:
      - www-net
    restart: always

  api:
    build: api
    hostname: api
    ports:
      - 3000:3000
    networks:
      - www-net

  app:
    image: nginx:latest
    hostname: app
    networks:
      - www-net
  # mq:
  #   image: rabbitmq:4-management
  #   container_name: mq
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   volumes:
  #     - mq-data:/var/lib/rabbitmq

  db:
    # container_name: db
    # hostname: db
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - db-data:/var/lib/postgresql
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - www-net

volumes:
  db-data:
    driver: local
  static-files:
    driver: local
  # mq-data:
  #   driver: local

networks:
  www-net:
    name: www-net
    driver: bridge